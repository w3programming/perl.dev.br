[
{
	"uri": "https://perl.dev.br/es/tutorial/",
	"title": "Tutorial",
	"tags": [],
	"description": "",
	"content": "Capitulo 1 Tutorial de Perl Aprende todos los fundamentos de uno de los idiomas más populares del mundo. El Tutorial está repleto de ejemplos prácticos y sencillos para facilitar la comprensión del usuario.\n Introducción a Perl   Configuración del Entorno de Desarrollo de Perl   Desarrollo del Primer Programa en Perl   "
},
{
	"uri": "https://perl.dev.br/es/tutorial/introduction/",
	"title": "Introducción a Perl",
	"tags": [],
	"description": "",
	"content": "En este artículo aprenderá sobre algunos aspectos importantes del lenguaje de programación Perl. Este es un primer contacto con las características que componen la lengua.\nCaracterísticas de Perl: aspectos importantes del lenguaje Perl es uno de los lenguajes de programación más populares y ricos en funciones del mercado. Se ha desarrollado y mejorado durante más de dos décadas. Cuenta con una comunidad activa y participativa en su desarrollo.\nPerl puede ejecutarse en una cantidad increíble de plataformas. Compatible con los sistemas operativos más populares como Windows, Linux y MacOS, se convierte en una buena elección para cualquier persona que necesite portabilidad multiplataforma.\nPerl actualmente admite más de 100 plataformas diferentes.\nPero, ¿para qué se puede utilizar Perl?\nPerl es un lenguaje versátil. Se puede usar tanto en proyectos de misión crítica como en proyectos más pequeños, o incluso en scripts muy simples de una línea.\nCaracterísticas más importantes de Perl: aspectos destacados del idioma 1. Lenguaje de programación extensible Perl tiene un repositorio de módulos llamado CPAN\u0026nbsp;\r, abreviatura de Comprehensive Perl Archive Network , en él se pueden encontrar cientos de miles de extensiones al lenguaje.\nSi necesita un módulo que realice una determinada tarea, lo más probable es que alguien de la comunidad ya lo haya desarrollado.\nLos módulos van desde interfaces de usuario gráficas hasta la integración con los administradores de bases de datos más populares .\nPerl brinda soporte para las bases de datos más populares para programadores como MySQL, Oracle, PostgresSQL y más.\n2. Facilidad de uso y aprendizaje A pesar de algunas controversias con respecto a Perl, el lenguaje es muy fácil de aprender.\nAdemás de tener una comunidad enorme y útil\u0026nbsp;\r, aún puede encontrar miles de tutoriales disponibles de forma gratuita en Internet.\nPerl también tiene documentación\u0026nbsp;\r muy detallado y fácil de entender. El lenguaje se destaca por su eficiencia en la realización de tareas complejas.\n3. Versatilidad Una de las características más importantes de cualquier lenguaje de programación es su versatilidad con respecto a los paradigmas de programación.\nProgramación orientada a objetos, procedural o funcional , todos estos paradigmas de programación son compatibles con Perl.\nEsto permite al programador la libertad de desarrollar sus programas utilizando el paradigma que mejor se adapte a sus proyectos.\n4. Expresión regular Cuando hablamos de manipulación de texto, Perl está en otro nivel. Podemos decir que el lenguaje es el precursor de las expresiones regulares.\nLa expresión regular o regex es un poderoso sistema que se utiliza para encontrar ocurrencias de texto en varios tipos de contenido. Aprenderá mucho más sobre este sistema a medida que avance el tutorial.\nPerl tiene un conjunto de API integradas que se usan específicamente para el procesamiento de texto. Con ellos es mucho más fácil manipular archivos generados a partir de lenguajes de marcas como XML y HTML.\nEl motor de expresiones regulares de Perl no necesita comentarios. Con un sistema robusto, la expresión regular de Perl se puede usar para encontrar archivos específicos en sistemas a través de combinaciones complejas.\n5. Código abierto Un proyecto de código abierto permite al usuario acceder, cambiar e incluso distribuirlo libre y libremente.\nPerl se ha desarrollado desde sus inicios como un proyecto de código abierto. Puede descargar Perl, cambiarlo y distribuirlo libremente utilizando una de las licencias GNU, GPL o artística.\nEl lenguaje todavía tiene soporte para uso comercial.\n6. Calidad y seguridad La seguridad del lenguaje es fundamental cuando hablamos de programación.\nPerl está certificado por Coverity libre de fallas de seguridad. El núcleo del idioma también tiene una baja densidad de defectos.\nEsto permite que el usuario tenga más confianza en el desarrollo de sus programas usando Perl.\nDiferentes versiones de Perl: versión 5 x versión 6 Vale la pena señalar aquí que Perl tiene dos versiones principales que generan confusión entre los usuarios.\nHasta la versión 5 de Perl, el lenguaje todavía se llama Perl. La versión 6, sin embargo, difería tanto de Perl que se convirtió en otro lenguaje, conocido como Raku\u0026nbsp;\r.\nRaku puede considerarse una implementación de Perl totalmente orientada a objetos.\nEn nuestro tutorial vamos a utilizar la versión 5.3 de Perl.\n¿Quién inventó Perl? Perl fue presentado por primera vez en 1987 por el programador Larry Wall.\nEra administrador de sistemas en la NASA y necesitaba un lenguaje para procesar los informes de manera más eficiente. La primera versión de Perl se creó y ejecutó en el sistema operativo UNIX.\nDurante más de dos décadas, Perl ha sido desarrollado y mejorado por una comunidad activa y dedicada de programadores.\n"
},
{
	"uri": "https://perl.dev.br/es/tutorial/development-environment/",
	"title": "Configuración del Entorno de Desarrollo de Perl",
	"tags": [],
	"description": "",
	"content": "En este tutorial vamos a instalar Perl y todo lo necesario para empezar a programar en este lenguaje.\nPara programar en Perl es necesario instalar la aplicación de distribución del lenguaje de y un editor de texto sencillo.\nStrawberry Perl — Qué es y cómo descargarlo Strawberry Perl es un entorno de desarrollo Perl para Microsoft Windows.\nStrawberry Perl contiene todos los requisitos necesarios para ejecutar scripts de Perl.\nStrawberry Perl se puede descargar directamente desde el sitio web oficial https://strawberryperl.com\u0026nbsp;\r.\nDespués de descargarlo, simplemente ejecute la aplicación de instalación.\n Instalación de Strawberry Perl en Windows: paso a paso con imágenes  Inmediatamente después de ejecutar el instalador de Strawberry Perl, aparece la siguiente ventana. Haga click en el siguiente botón para continuar.  \r\rLea y acepte los términos del programa haciendo clic en la casilla I accept the terms in the license agreement y luego en el botón Next  \r\rSeleccione la ubicación de instalación de la aplicación. De manera predeterminada, se sugiere instalar Strawberry Perl en la carpeta C:\\Strawberry. Si tiene dudas sobre dónde instalarlo, deje esta carpeta predeterminada.  \r\rCon todo el sistema configurado, simplemente haga clic en el botón Instalar para iniciar la instalación del software.  \r\rAhora, solo espera a que se complete la instalación.  \r\rDespués de completar la instalación de Strawberry Perl, aparece la siguiente pantalla. Finalice el instalador haciendo clic en el botón Finish.  \r\rConfirmación de instalación de Perl Para confirmar que Perl se ha instalado correctamente en su computadora, siga estos pasos:\n Abra un símbolo del sistema de Windows y escriba el comando perl -v. Presione la tecla Enter para ejecutar el comando. Verifique si el comando genera la versión de Perl instalada en la computadora como se muestra en la imagen a continuación.  \r\rSi el comando devuelve algo como esto:\n\u0026#39;perl\u0026#39; no se reconoce como un comando interno o externo, un programa ejecutable o un archivo por lotes. o\n\u0026#39;perl\u0026#39; não é reconocido como um comando interno... …es necesario verificar si el directorio C:\\Strawberry\\perl\\bin se ha agregado a la variable de entorno PATH de Windows.\nPuede agregar el directorio Perl en la variable de entorno PATH usando el comando:\nsetx path \u0026#34;%path%;C:\\Strawberry\\perl\\bin\u0026#34; Instalación de un editor de texto, también conocido como editor de código Los scripts de Perl son texto sin formato.\nLos scripts de Perl se pueden editar en cualquier editor de texto sin formato.\nPara facilitar la programación en Perl, se recomienda instalar un editor que tenga funciones como resaltado de sintaxis y autocompletado.\nLas opciones del editor son muchas. Recomiendo usar Visual Studio Code.\nPara descargarlo, simplemente visite el sitio web oficial en https://code.visualstudio.com\u0026nbsp;\r.\nLa instalación de Visual Studio Code es bastante simple y directa. Ejecute el instalador y siga los pasos presentados por el programa.\n Si quieres probar otras opciones del editor, puedes probar Sublime Text\u0026nbsp;\r o el Atom\u0026nbsp;\r. Dos de los editores de código más populares entre los programadores. Notepad\u0026#43;\u0026#43;\u0026nbsp;\r también es una buena opción.\n"
},
{
	"uri": "https://perl.dev.br/es/tutorial/first-program/",
	"title": "Desarrollo del Primer Programa en Perl",
	"tags": [],
	"description": "",
	"content": " Los scripts de Perl son texto sin formato.\n A pesar de su simplicidad, los scripts de Perl pueden realizar tareas complejas.\n Primero, cree una carpeta llamada perl-scripts en el directorio raíz C:. Abra su editor de texto favorito para crear el primer script de Perl. Cree un nuevo archivo e ingrese el código a continuación:  #!/usr/bin/perl use warnings; print(\u0026#34;Hello, World!\\n\u0026#34;);  Guarde el archivo con el nombre hello.pl en la carpeta perl-scripts.  Ejecutar un script en Perl Para ejecutar un script de Perl, abra un símbolo del sistema en Windows.\nNavegue a la carpeta donde se encuentra el script.\nEn nuestro caso, la carpeta se encuentra en c:\\perl-scripts. Para colocar el indicador dentro de esta carpeta, escriba el comando cd c:\\perl-scripts y presione la tecla Enter.\n Ejecute el comando:\nperl hello.pl Salida:\nHello, World! Si ve este resultado en la pantalla, felicitaciones, acaba de crear y ejecutar con éxito su primer script Perl.\nExplicando el guión — En detalle Repasemos cada línea de nuestro primer programa Perl para entender cómo funciona.\n#!/usr/bin/perl La primera línea le dice al shell que este script debe ejecutarse usando el intérprete de Perl.\nLa dirección /usr/bin/perl es exactamente donde se encuentra el intérprete.\nuse warnings; La segunda línea del script incluye un Pragma.\nEste Pragma le dice al intérprete de Perl que se deben mostrar advertencias adicionales al usuario cuando algo sucede en el código.\nOtro Pragma muy importante utilizado en Perl es use stricts. Veremos más sobre esto a medida que avance el tutorial.\n print(\u0026#34;Hello, World!\\n\u0026#34;); La tercera línea del script contiene una función llamada print.\nEsta función coloca un valor en la pantalla.\nEn este caso, el valor es lo que está dentro de los paréntesis.\n\u0026quot;Hello, World!\\n\u0026quot; representa una string en Perl.\nLas strings en Perl están entre comillas \u0026quot;\u0026quot;.\nA lo largo del tutorial, aprenderá más sobre strings en Perl.\nLa secuencia \\n dentro de la string representa una nueva línea para el intérprete de Perl.\nEl \\n es conocido como el escape sequence.\n"
},
{
	"uri": "https://perl.dev.br/es/",
	"title": "Aprender Perl",
	"tags": [],
	"description": "",
	"content": "Aprender Perl Este tutorial cubre los aspectos más fundamentales de Perl para aquellos que quieren aprender a liberar todo el potencial de este lenguaje de programación poderoso y establecido.\n No importa si recién está comenzando con Perl o si es un programador experimentado, este tutorial es para usted.\nEste tutorial comenzará con los conceptos básicos de Perl y avanzará a un nivel más profesional. Aprender Perl es fácil, así que no tienes que preocuparte por eso. Las lecciones son pequeñas y cortas para permitirle aprender a su propio ritmo.\n"
},
{
	"uri": "https://perl.dev.br/es/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://perl.dev.br/es/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]